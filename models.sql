

CREATE TABLE IF NOT EXISTS Role (
  id int(11) NOT NULL AUTO_INCREMENT,
  name char(50) COLLATE utf8_unicode_ci DEFAULT NULL,
  description char(100) COLLATE utf8_unicode_ci DEFAULT NULL,
  created datetime DEFAULT NULL,
  modified datetime DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY Role_id_uindex (id)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;

CREATE TABLE IF NOT EXISTS RoleMapping (
  id int(11) NOT NULL AUTO_INCREMENT,
  principalType char(50) COLLATE utf8_unicode_ci NOT NULL,
  principalId int(11) DEFAULT NULL,
  roleId int(11) DEFAULT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY AppRoleMapping_id_uindex (id)
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;


SELECT concat('DROP TABLE IF EXISTS `', table_name, '`;')
FROM information_schema.tables
WHERE table_schema = 'reviewsystem';


DROP TABLE IF EXISTS `Task`;
DROP TABLE IF EXISTS `Order`;
DROP TABLE IF EXISTS `Review`;
DROP TABLE IF EXISTS `Plan`;
DROP TABLE IF EXISTS `Buyer`;
DROP TABLE IF EXISTS `OrderProgress`;
DROP TABLE IF EXISTS `Priority`;
DROP TABLE IF EXISTS `ReviewProgress`;
DROP TABLE IF EXISTS `Seller`;

CREATE TABLE IF NOT EXISTS Buyer (
  id INT PRIMARY KEY AUTO_INCREMENT,
  buyerID VARCHAR(255) UNIQUE NOT NULL,
  amzBuyerID VARCHAR(255) NOT NULL,
  status BOOLEAN  DEFAULT TRUE,
  note TEXT ,
  manager VARCHAR(255)  DEFAULT '',
  description TEXT ,
  errorCode smallint(4) DEFAULT NULL,
  createdDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Seller (
  id INT PRIMARY KEY AUTO_INCREMENT,
  sellerName VARCHAR(255) UNIQUE NOT NULL,
  marketPlace VARCHAR(255) NOT NULL,
  status BOOLEAN DEFAULT TRUE,
  note TEXT ,
  manager VARCHAR(255)  DEFAULT '',
  description TEXT ,
  errorCode smallint(4) DEFAULT NULL,
  createdDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


CREATE TABLE IF NOT EXISTS Priority(
  id INT PRIMARY KEY AUTO_INCREMENT,
  code INT UNIQUE NOT NULL,
  english VARCHAR(255) NOT NULL ,
  chinese VARCHAR(255) NOT NULL ,
  korean VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS OrderProgress(
  id INT PRIMARY KEY AUTO_INCREMENT,
  code INT UNIQUE NOT NULL,
  english VARCHAR(255) NOT NULL ,
  chinese VARCHAR(255) NOT NULL ,
  korean VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS ReviewProgress(
  id INT PRIMARY KEY AUTO_INCREMENT,
  code INT UNIQUE NOT NULL,
  english VARCHAR(255) NOT NULL ,
  chinese VARCHAR(255) NOT NULL ,
  korean VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS Plan (
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    planID VARCHAR(255) NOT NULL,
    asin VARCHAR(255) NOT NULL,
    planNumber INT NOT NULL,
    finishNumber INT NOT NULL DEFAULT 0,
    note TEXT ,
    operator VARCHAR(255)  DEFAULT '',
    createdDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS Task (
    id VARCHAR(50) NOT NULL PRIMARY KEY,
    plan INT NOT NULL,
    reviewProgress INT NOT NULL DEFAULT 1,
    orderProgress INT NOT NULL DEFAULT 1,
    note TEXT ,
    finish BOOLEAN DEFAULT FALSE,
    status BOOLEAN DEFAULT TRUE,
    updatedDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (plan) REFERENCES Plan(id),
    FOREIGN KEY (reviewProgress) REFERENCES ReviewProgress(id),
    FOREIGN KEY (orderProgress) REFERENCES OrderProgress(id)
);

CREATE TABLE IF NOT EXISTS Review (
  id VARCHAR(255) NOT NULL PRIMARY KEY,
  priority INT NOT NULL DEFAULT 1,
  plan INT NOT NULL,
  rating INT DEFAULT 5,
  title TEXT ,
  content TEXT ,
  image VARCHAR(255)  DEFAULT '',
  note TEXT ,
  message TEXT ,
  operator VARCHAR(255)  DEFAULT '',
  status BOOLEAN DEFAULT FALSE,
  updatedDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (plan) REFERENCES Plan(id),
  FOREIGN KEY (priority) REFERENCES Priority(id)
);

CREATE TABLE IF NOT EXISTS `Order` (
  id VARCHAR(50) NOT NULL PRIMARY KEY,
  plan INT NOT NULL,
  seller INT,
  buyer INT ,
  orderNumber VARCHAR(255) DEFAULT NULL,
  price INT DEFAULT NULL,
  orderedDate TIMESTAMP DEFAULT NULL,
  postDate TIMESTAMP DEFAULT NULL,
  postBy VARCHAR(255) DEFAULT NULL,
  diabled BOOLEAN DEFAULT FALSE,
  diabledDate TIMESTAMP DEFAULT NULL,
  note TEXT ,
  message TEXT ,
  status BOOLEAN DEFAULT TRUE,
  updatedDate TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (plan) REFERENCES Plan(id),
  FOREIGN KEY (seller) REFERENCES Seller(id),
  FOREIGN KEY (buyer) REFERENCES Buyer(id)
);



